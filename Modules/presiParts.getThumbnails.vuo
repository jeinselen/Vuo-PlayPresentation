/**
 * @file
 * @brief Get Thumbnails
 * Generates cache folder (if it does not already exist)
 * Generates thumbnails in cache location (if they do not already exist)
 * Gets thumbnails from cache and returns a list of layers
 *
 * @author [iaian7](https://vuo.org/user/127)
 * @createdInVuoVersion 2.4.5
 * @lastSavedInVuoVersion 2.4.5
 * @keywords get, thumbnail, preview, generate, cache
 * @copyright Copyright Â© 2025 [iaian7](https://vuo.org/user/127)
 * @see This is a Vuo Composition source code file.  See https://vuo.org for further information.
 */

digraph G
{
AppendTexts [type="vuo.text.append" version="1.2.0" label="Append Texts|<refresh>refresh\l|<texts>texts\l|<separator>separator\l|<includeEmptyParts>includeEmptyParts\l|<compositeText>compositeText\r" pos="915,720" fillcolor="orange" _includeEmptyParts="true"];
AppendTexts2 [type="vuo.text.append" version="1.2.0" label="Append Texts|<refresh>refresh\l|<texts>texts\l|<separator>separator\l|<includeEmptyParts>includeEmptyParts\l|<compositeText>compositeText\r" pos="855,255" fillcolor="tangerine" _includeEmptyParts="false"];
CompareTexts [type="vuo.text.compare" version="1.1.0" label="Compare Texts|<refresh>refresh\l|<a>a\l|<comparison>comparison\l|<b>b\l|<result>result\r" pos="1710,615" fillcolor="tangerine" _a="\".png.jpeg.jpg.gif.bmp.exr.hdr.psd.pct.raw.cr2.dng.dcr.nef.raf.mos.kdc.tif.tiff.tga.targa.webp.heic\"" _comparison="\{\"type\":\"contains\",\"isCaseSensitive\":false\}"];
ConvertFrameToImage3 [type="vuo.type.videoframe.image" version="1.0.0" label="Convert Frame to Image|<refresh>refresh\l|<frame>frame\l|<image>image\r" pos="2010,1185"];
CountItemsInList [type="vuo.list.count.VuoLayer" version="1.0.0" label="Count Items in List|<refresh>refresh\l|<list>list\l|<itemCount>itemCount\r" pos="1815,240" fillcolor="magenta"];
CreateFolder [type="vuo.file.create.folder" version="1.0.0" label="Create Folder|<refresh>refresh\l|<createAtUrl>createAtUrl\l|<done>done\r" pos="1290,240" fillcolor="tangerine"];
DecodeMovieImage [type="vuo.video.decodeImage" version="2.2.1" label="Decode Movie Image|<refresh>refresh\l|<url>url\l|<frameTime>frameTime\l|<loop>loop\l|<videoFrame>videoFrame\r" pos="2055,675" fillcolor="blue" _frameTime="0.5" _loop="\"loop\""];
FetchImage2 [type="vuo.image.fetch" version="2.1.0" label="Fetch Image|<refresh>refresh\l|<url>url\l|<image>image\r" pos="2115,765" fillcolor="violet"];
FetchImage3 [type="vuo.image.fetch" version="2.1.0" label="Fetch Image|<refresh>refresh\l|<url>url\l|<image>image\r" pos="2910,600" fillcolor="orange"];
FileExists [type="vuo.file.exists" version="1.0.0" label="File Exists|<refresh>refresh\l|<url>url\l|<exists>exists\r" pos="1080,510" fillcolor="orange"];
FileExists2 [type="vuo.file.exists" version="1.0.0" label="File Exists|<refresh>refresh\l|<url>url\l|<exists>exists\r" pos="1005,225" fillcolor="tangerine"];
GetFileURLValues [type="vuo.url.get.file" version="1.0.0" label="Get File URL Values|<refresh>refresh\l|<url>url\l|<path>path\r|<folder>folder\r|<fileName>fileName\r|<extension>extension\r" pos="1380,600" fillcolor="tangerine"];
GetFileURLValues3 [type="vuo.url.get.file" version="1.0.0" label="Get File URL Values|<refresh>refresh\l|<url>url\l|<path>path\r|<folder>folder\r|<fileName>fileName\r|<extension>extension\r" pos="645,705" fillcolor="orange"];
GetFileURLValues4 [type="vuo.url.get.file" version="1.0.0" label="Get File URL Values|<refresh>refresh\l|<url>url\l|<path>path\r|<folder>folder\r|<fileName>fileName\r|<extension>extension\r" pos="600,240" fillcolor="tangerine"];
GetFirstItemInList2 [type="vuo.list.get.first.VuoText" version="1.0.0" label="Get First Item in List|<refresh>refresh\l|<list>list\l|<firstItem>firstItem\r" pos="180,300"];
HoldList [type="vuo.data.hold.list2.VuoText" version="2.0.0" label="Hold List|<refresh>refresh\l|<update>update\l|<value>value\l|<heldValue>heldValue\r" pos="1425,240" fillcolor="magenta"];
HoldValue [type="vuo.data.hold2.VuoText" version="3.0.0" label="Hold Value|<refresh>refresh\l|<update>update\l|<value>value\l|<heldValue>heldValue\r" pos="2790,600" fillcolor="orange"];
MakeImageLayer [type="vuo.layer.make.scaled" version="3.1.0" label="Make Image Layer|<refresh>refresh\l|<image>image\l|<anchor>anchor\l|<center>center\l|<rotation>rotation\l|<width>width\l|<fixed>fixed\l|<opacity>opacity\l|<layer>layer\r" pos="3030,600" fillcolor="magenta" _anchor="\{\"horizontalAlignment\":\"center\",\"verticalAlignment\":\"center\"\}" _center="\{\"x\":0.0,\"y\":0.0\}" _rotation="0.0" _width="0.20000000000000001" _fixed="\"horizontal\"" _opacity="1.0"];
MakeList2 [type="vuo.list.make.4.VuoText" version="2.0.0" label="Make List|<refresh>refresh\l|<1>1\l|<2>2\l|<3>3\l|<4>4\l|<list>list\r" pos="856,731" fillcolor="orange" _2="\"cache\\/\"" _4="\".jpg\""];
MakeList3 [type="vuo.list.make.2.VuoText" version="2.0.0" label="Make List|<refresh>refresh\l|<1>1\l|<2>2\l|<list>list\r" pos="792,266" fillcolor="tangerine" _2="\"cache\\/\""];
ProcessList [type="vuo.list.process.VuoText.VuoLayer" version="1.0.1" label="Process List|<refresh>refresh\l|<fire>fire\l|<processedItem>processedItem\l|<processedList>processedList\r|<processItem>processItem\r" pos="1560,240" fillcolor="magenta" _processedList_eventThrottling="enqueue" _processItem_eventThrottling="enqueue"];
ResizeImage [type="vuo.image.resize" version="1.1.3" label="Resize Image|<refresh>refresh\l|<image>image\l|<sizingMode>sizingMode\l|<width>width\l|<height>height\l|<resizedImage>resizedImage\r" pos="2490,615" fillcolor="tangerine" _sizingMode="\"fill\"" _width="256" _height="144"];
SaveImage [type="vuo.image.save2" version="2.0.0" label="Save Image|<refresh>refresh\l|<url>url\l|<saveImage>saveImage\l|<ifExists>ifExists\l|<format>format\l|<done>done\r" pos="2655,600" fillcolor="orange" _ifExists="1" _format="\"JPEG\""];
SelectEventInput [type="vuo.select.in.boolean.event2" version="3.0.0" label="Select Event Input|<refresh>refresh\l|<which>which\l|<falseOption>falseOption\l|<trueOption>trueOption\l|<out>out\r" pos="1230,420" fillcolor="orange"];
SelectInput2 [type="vuo.select.in.boolean.VuoText" version="2.0.0" label="Select Input|<refresh>refresh\l|<which>which\l|<falseOption>falseOption\l|<trueOption>trueOption\l|<out>out\r" pos="1230,600" fillcolor="tangerine"];
SelectInput3 [type="vuo.select.in.boolean.VuoImage" version="2.0.0" label="Select Input|<refresh>refresh\l|<which>which\l|<falseOption>falseOption\l|<trueOption>trueOption\l|<out>out\r" pos="2340,615" fillcolor="tangerine"];
SelectInput4 [type="vuo.select.in.boolean.VuoText" version="2.0.0" label="Select Input|<refresh>refresh\l|<which>which\l|<falseOption>falseOption\l|<trueOption>trueOption\l|<out>out\r" pos="1230,510" fillcolor="orange"];
SelectInput5 [type="vuo.select.in.boolean.VuoText" version="2.0.0" label="Select Input|<refresh>refresh\l|<which>which\l|<falseOption>falseOption\l|<trueOption>trueOption\l|<out>out\r" pos="1890,675" fillcolor="blue"];
SelectInput6 [type="vuo.select.in.boolean.VuoText" version="2.0.0" label="Select Input|<refresh>refresh\l|<which>which\l|<falseOption>falseOption\l|<trueOption>trueOption\l|<out>out\r" pos="1890,765" fillcolor="violet"];
SelectOutput2 [type="vuo.select.out.boolean.VuoText" version="2.0.0" label="Select Output|<refresh>refresh\l|<which>which\l|<in>in\l|<falseOption>falseOption\r|<trueOption>trueOption\r" pos="1125,240" fillcolor="tangerine"];
ShareValue [type="vuo.data.share.VuoText" version="1.0.0" label="URL|<refresh>refresh\l|<value>value\l|<sameValue>sameValue\r" pos="510,600" fillcolor="tangerine"];
ShareValue2 [type="vuo.data.share.VuoText" version="1.0.0" label="Cache Location|<refresh>refresh\l|<value>value\l|<sameValue>sameValue\r" pos="2640,720" fillcolor="orange"];
PublishedInputs [type="vuo.in" label="PublishedInputs|<Files>Files\r" _Files_type="VuoList_VuoText"];
PublishedOutputs [type="vuo.out" label="PublishedOutputs|<Layers>Layers\l|<Count>Count\l" _Layers_type="VuoList_VuoLayer" _Count_type="VuoInteger"];

AppendTexts2:compositeText -> FileExists2:url;
AppendTexts2:compositeText -> SelectOutput2:in;
AppendTexts:compositeText -> FileExists:url;
AppendTexts:compositeText -> SelectInput4:falseOption;
AppendTexts:compositeText -> ShareValue2:value;
CompareTexts:result -> SelectInput3:which;
CompareTexts:result -> SelectInput5:which;
CompareTexts:result -> SelectInput6:which;
ConvertFrameToImage3:image -> SelectInput3:falseOption;
CountItemsInList:itemCount -> PublishedOutputs:Count;
CreateFolder:done -> HoldList:update;
DecodeMovieImage:videoFrame -> ConvertFrameToImage3:frame;
FetchImage2:image -> SelectInput3:trueOption;
FetchImage3:image -> MakeImageLayer:image;
FileExists2:exists -> SelectOutput2:which;
FileExists:exists -> SelectEventInput:trueOption;
FileExists:exists -> SelectEventInput:which;
FileExists:exists -> SelectInput2:which;
FileExists:exists -> SelectInput4:which;
GetFileURLValues3:fileName -> MakeList2:3;
GetFileURLValues3:folder -> MakeList2:1;
GetFileURLValues4:folder -> MakeList3:1;
GetFileURLValues:extension -> CompareTexts:b;
GetFirstItemInList2:firstItem -> GetFileURLValues4:url;
HoldList:heldValue -> ProcessList:fire;
HoldValue:heldValue -> FetchImage3:url;
MakeImageLayer:layer -> ProcessList:processedItem;
MakeList2:list -> AppendTexts:texts;
MakeList3:list -> AppendTexts2:texts;
ProcessList:processItem -> ShareValue:value;
ProcessList:processedList -> CountItemsInList:list;
ProcessList:processedList -> PublishedOutputs:Layers;
PublishedInputs:Files -> GetFirstItemInList2:list;
PublishedInputs:Files -> HoldList:value;
ResizeImage:resizedImage -> SaveImage:saveImage;
SaveImage:done -> HoldValue:update;
SelectEventInput:out -> HoldValue:update;
SelectInput2:out -> GetFileURLValues:url;
SelectInput3:out -> ResizeImage:image;
SelectInput4:out -> SaveImage:url;
SelectInput5:out -> DecodeMovieImage:frameTime [event=true];
SelectInput5:out -> DecodeMovieImage:url;
SelectInput6:out -> FetchImage2:url;
SelectOutput2:falseOption -> CreateFolder:createAtUrl;
SelectOutput2:trueOption -> HoldList:update;
ShareValue2:sameValue -> HoldValue:value;
ShareValue:sameValue -> GetFileURLValues3:url;
ShareValue:sameValue -> SelectInput2:falseOption;
ShareValue:sameValue -> SelectInput5:falseOption;
ShareValue:sameValue -> SelectInput6:trueOption;
}
